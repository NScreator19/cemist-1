# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PcoSqZ2WMpNdDEaFSptg4Skux6BhUhfI
"""

import streamlit as st
import pandas as pd

# Data awal dari gambar
data = {
    "Plant": ["NAR1", "NAR1", "NAR1", "NAR1", "CIL", "CIL", "CIL", "CIL", "CIL", "CIL",
              "TLG", "TLG", "TLG", "TLG", "TLG", "TQ1", "TQ1", "TQ1", "TQ1", "TQ1", "TQ1", "TQ1"],
    "Tipe": ["OPC", "PCC", "PPC", "RFP", "OPC", "PCC", "PPC", "RFP", "SRC", "MSRC",
             "OPC", "PCC", "PPC", "RFP", "SRC", "OPC", "PCC", "PPC", "RFP", "SRC", "MSRC", "MOS"],
    "Clinker Factor (%)": [74.79, 69.63, 65.25, 65.26, 77.48, 67.78, 63.85, 63.39, 77.50, 76.50,
                           77.11, 66.41, 66.40, 67.31, 77.49, 77.00, 67.94, 66.90, 67.18, 76.50, 76.50, 72.50],
    "Cement Production (ton)": [27208, 325430, 17992, 1673, 5831, 246032, 38840, 5752, 697, 143,
                                15096, 177088, 28967, 6180, 153, 1651, 269051, 12734, 48720, 1135, 94, 607]
}

# Load ke DataFrame
df = pd.DataFrame(data)
df["Kode"] = df["Plant"] + " " + df["Tipe"]

# Hitung clinker consumption awal
df["Clinker Consumption (ton)"] = df["Clinker Factor (%)"] * df["Cement Production (ton)"] / 100

# Hitung CF konsolidasi awal
total_clinker_awal = df["Clinker Consumption (ton)"].sum()
total_cement = df["Cement Production (ton)"].sum()
cf_konsolidasi_awal = total_clinker_awal / total_cement * 100

st.title("Simulasi Penyesuaian Clinker Factor Konsolidasi")

# Input dari user
cf_target = st.number_input("Masukkan CF Konsolidasi target (%):", min_value=0.0, max_value=100.0, value=68.0)
semen_dipilih = st.multiselect("Pilih jenis semen yang akan disesuaikan:", df["Kode"].tolist())

if cf_target and semen_dipilih:
    # Hitung klinker total baru
    clinker_target_total = cf_target * total_cement / 100
    gap = total_clinker_awal - clinker_target_total

    # Salin dataframe untuk modifikasi
    df_result = df.copy()

    # Jumlah semen yang dipilih
    n = len(semen_dipilih)
    clinker_per_semen = gap / n

    for kode in semen_dipilih:
        idx = df_result[df_result["Kode"] == kode].index[0]
        clinker_lama = df_result.at[idx, "Clinker Consumption (ton)"]
        semen_produksi = df_result.at[idx, "Cement Production (ton)"]

        clinker_baru = clinker_lama - clinker_per_semen
        cf_baru = clinker_baru / semen_produksi * 100

        df_result.at[idx, "Clinker Consumption (ton)"] = clinker_baru
        df_result.at[idx, "Clinker Factor (%)"] = cf_baru

    # Hitung CF konsolidasi baru
    cf_konsolidasi_baru = df_result["Clinker Consumption (ton)"].sum() / total_cement * 100

    st.subheader("Hasil Simulasi")
    st.dataframe(df_result[["Plant", "Tipe", "Clinker Factor (%)", "Cement Production (ton)", "Clinker Consumption (ton)"]])
    st.success(f"CF Konsolidasi Awal: {cf_konsolidasi_awal:.2f}%")
    st.success(f"CF Konsolidasi Baru: {cf_konsolidasi_baru:.2f}%")
else:
    st.info("Masukkan target CF dan pilih jenis semen yang akan disesuaikan.")